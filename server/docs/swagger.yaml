basePath: /
definitions:
  dto.AddCartItemDto:
    properties:
      productId:
        type: integer
      quantity:
        type: integer
    type: object
  dto.CreateProductDto:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  dto.DeleteCartItemDto:
    properties:
      productId:
        type: integer
    type: object
  dto.OrderCancelRequest:
    properties:
      status:
        type: string
    type: object
  dto.OrderCreateDto:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.OrderItemDto'
        type: array
    type: object
  dto.OrderItemDto:
    properties:
      productId:
        type: integer
      quantity:
        type: integer
    type: object
  dto.OrdersCreateDto:
    properties:
      orders:
        items:
          $ref: '#/definitions/dto.OrderCreateDto'
        type: array
      paymentMethodId:
        type: string
      recipientAddress:
        type: string
      recipientName:
        type: string
      recipientPhone:
        type: string
    type: object
  dto.SetCartItemDto:
    properties:
      productId:
        type: integer
      quantity:
        type: integer
    type: object
  dto.SetProductPriceDto:
    properties:
      price:
        type: number
    type: object
  dto.UpdateProductDto:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  dto.UpdateProductStockDto:
    properties:
      description:
        type: string
      quantity:
        type: integer
      type:
        type: string
    type: object
  dto.UserLogInResponse:
    properties:
      accessToken:
        type: string
    type: object
  dto.UserLoginDto:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.UserRegisterDto:
    properties:
      confirmPassword:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        type: integer
    type: object
  echo.HTTPError:
    properties:
      message: {}
    type: object
info:
  contact: {}
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Order System
paths:
  /api/cart:
    get:
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get current cart items in user's cart
      tags:
      - cart
    post:
      consumes:
      - application/json
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      - description: The information of the item to be added
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.AddCartItemDto'
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "401":
          description: Insufficient stock quantity
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Add new item to user's cart
      tags:
      - cart
    put:
      consumes:
      - application/json
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      - description: The quantity and information of the item to be changed
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.SetCartItemDto'
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "401":
          description: Insufficient stock quantity
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Change the quantity of an item in user's cart
      tags:
      - cart
  /api/cart/remove-item:
    post:
      consumes:
      - application/json
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      - description: The information of the cart item to be deleted
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.DeleteCartItemDto'
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Delete an item in user's cart
      tags:
      - cart
  /api/orders:
    get:
      consumes:
      - application/json
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get all orders of a current logged in user
      tags:
      - orders
    post:
      consumes:
      - application/json
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      - description: The information of the orders to be created
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.OrdersCreateDto'
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Create orders based on chosen cart items
      tags:
      - orders
  /api/orders/:id/cancel:
    post:
      consumes:
      - application/json
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      - description: The information of the order to be cancelled
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.OrderCancelRequest'
      - description: The id of the order to be cancelled
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: invalid payload
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Cancel an user's order
      tags:
      - orders
  /api/orders/export-csv:
    get:
      consumes:
      - application/json
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      - description: Status of the orders to be exported
        in: query
        name: status
        type: string
      produces:
      - text/csv
      responses:
        "200":
          description: Success
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Export user's orders to CSV
      tags:
      - orders
  /api/payments:
    get:
      consumes:
      - application/json
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get all supported payment methods
      tags:
      - payments
  /api/products:
    get:
      consumes:
      - application/json
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      - in: query
        name: itemsPerPage
        type: integer
      - in: query
        name: pageIndex
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get available products (in-stock products)
      tags:
      - products
  /api/vendors/orders:
    get:
      consumes:
      - application/json
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      - in: query
        name: itemsPerPage
        type: integer
      - in: query
        name: pageIndex
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get all orders of current logged in vendors
      tags:
      - vendor-orders
  /api/vendors/orders/:id:
    put:
      consumes:
      - application/json
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      - description: Order id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: The order has reached its final state
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Move an order to its next status
      tags:
      - vendor-orders
  /api/vendors/orders/:id/cancel:
    post:
      consumes:
      - application/json
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      - description: Order id
        in: path
        name: id
        required: true
        type: integer
      - description: Cancel order request payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.OrderCancelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "404":
          description: Order not found (or not belongs to current logged in vendor)
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Cancel an order by logged in vendor
      tags:
      - vendor-orders
  /api/vendors/products:
    get:
      consumes:
      - application/json
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      - in: query
        name: itemsPerPage
        type: integer
      - in: query
        name: pageIndex
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get all products that belongs to the logged in vendor
      tags:
      - vendor-products
    post:
      consumes:
      - application/json
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      - description: Product to be created
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.CreateProductDto'
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Create a new product
      tags:
      - vendor-products
  /api/vendors/products/:id:
    put:
      consumes:
      - application/json
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      - description: Update product request
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateProductDto'
      - description: Product id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Insufficient permission (when try to update a product that
            belongs other vendor)
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Update a product
      tags:
      - vendor-products
  /api/vendors/products/:id/prices:
    get:
      consumes:
      - application/json
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      - description: Product id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "403":
          description: Insufficient permission (when try to get price history of a
            product that belongs other vendor)
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get unit price history of a product
      tags:
      - vendor-products
    post:
      consumes:
      - application/json
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      - description: Set product price request
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.SetProductPriceDto'
      - description: Product id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request
        "403":
          description: Insufficient permission (when try to set price of a product
            that belongs other vendor)
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Set the unit price of a product
      tags:
      - vendor-products
  /api/vendors/products/:id/stocks:
    post:
      consumes:
      - application/json
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      - description: Product stock update request
        in: body
        name: payload
        schema:
          $ref: '#/definitions/dto.UpdateProductStockDto'
      - description: Product id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request / Insufficient stock quantity
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Update product stock (import/export)
      tags:
      - vendor-products
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: user credentials
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.UserLoginDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserLogInResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: User logging in
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: user information
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.UserRegisterDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserLogInResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Register new user
      tags:
      - auth
swagger: "2.0"
